package eu.pregatire.des;

import java.security.InvalidKeyException;
import java.security.NoSuchAlgorithmException;
import java.util.Base64;

import javax.crypto.Cipher;
import javax.crypto.KeyGenerator;
import javax.crypto.NoSuchPaddingException;
import javax.crypto.SecretKey;

public class DES_DECRIPTION {
	private static Cipher dcipher;

	private static SecretKey key;

	public static void decryptDES(String encrypted, SecretKey key2) throws NoSuchAlgorithmException, InvalidKeyException, NoSuchPaddingException {
		// generate secret key using DES algorithm
		//key = KeyGenerator.getInstance("DES").generateKey();
		key = key2;
		dcipher = Cipher.getInstance("DES");
		dcipher.init(Cipher.DECRYPT_MODE, key);
		String decrypted = decrypt(encrypted);

		System.out.println("Decrypted: " + decrypted);
	}

	public static String decrypt(String str) {

		try {

			// decode with base64 to get bytes

			byte[] dec = Base64.getDecoder().decode(str.getBytes());// BASE64DecoderStream.decode(str.getBytes());

			byte[] utf8 = dcipher.doFinal(dec);

// create new string based on the specified charset

			return new String(utf8, "UTF8");

		}

		catch (Exception e) {

			e.printStackTrace();

		}

		return null;

	}

}
